@using System.Web.Optimization
@using BlogEngine.Core
<!DOCTYPE html>
@{
    if (!Security.IsAuthorizedTo(Rights.EditOwnPosts))
    {
        Security.RedirectForUnauthorizedRequest();
    }
    string loginUrl = Href(Utils.RelativeWebRoot + "Account/login.aspx");
    var userRights = string.Join("','", Security.CurrentUserRights().Select(r => r.Flag).ToArray());
    var id = Request["id"];
    var returnUrl = Request["return"];
    if (string.IsNullOrEmpty(returnUrl)) { returnUrl = Utils.RelativeWebRoot + "admin/#/content"; }
    var imgHandler = "image.axd?picture=";
    if (string.IsNullOrEmpty(Blog.CurrentInstance.StorageContainerName))
    {
        imgHandler = Blog.CurrentInstance.RelativeWebRoot + imgHandler;
    }
    else
    {
        imgHandler = Blog.CurrentInstance.RelativeWebRoot + Blog.CurrentInstance.StorageContainerName + "/" + imgHandler;
    }
}
<html data-ng-app="blogAdmin">
<head>
    @Styles.Render("~/Content/admincss")
    <script type="text/javascript">
        var UserVars = { Name: '@Security.CurrentUser.Identity.Name', IsAdmin: '@Security.IsAdministrator', Rights: ['@Html.Raw(userRights)'] };
        var editVars = { id: '@id', storageLocation: '@BlogConfig.StorageLocation' };
    </script>
    <script type="text/javascript" src="admin.res.axd"></script>
    <style>
        .file-card {
            border: 1px solid #e5e5e5;
            width: 138px;
            height: 160px;
            display: inline-block;
            float: left;
            margin: 5px;
        }
        .file-card img {
            width: 138px;
        }
        .file-form {
            margin: 0 20px;
            padding: 8px 8px 8px 0;
        }
        .file-card-box {
            width: 138px;
            height: 140px;
            overflow: hidden;
            background-color: #e5e5e5;
        }
        .file-card-lbl {
            display: inline-block;
            padding: 2px 10px;
            width: 138px;
            height: 24px;
            background-color: #ccc;
        }

        .page-header .btn-group .btn {
            font-size: 14px;
            margin: 0 1px 0 0;
            padding: 0;
            width: 50px;
        }
        .page-header .btn.pull-left {
            margin-right: 10px;
        }
        .btn-hasicon.btn-sm {
            padding-left: 42px;
        }
        .btn {
            border: medium none;
            border-radius: 2px;
            color: #fff !important;
            cursor: pointer;
            font-size: 12px;
            letter-spacing: 1px;
            padding: 0;
            position: relative;
            text-transform: uppercase;
        }
        .btn-hasicon.btn-sm {
            padding-left: 42px;
        }
        .btn-sm {
            font-size: 11px;
            height: 30px;
            line-height: 30px;
            padding: 0 15px;
        }
        .page-header .btn.pull-left {
            margin-right: 10px;
        }
        .btn-hasicon.btn-sm i {
            line-height: 31px;
            width: 30px;
        }
        .btn-hasicon i {
            line-height: 36px;
            width: 35px;
            border-right: 1px solid rgba(0, 0, 0, 0.1);
            display: block;
            font-size: 14px;
            height: 100%;
            left: 0;
            margin: 0;
            position: absolute;
            text-align: center;
            top: 0;
            vertical-align: middle;
        }
        #fileBtn i {
            border-right: 1px solid rgba(0, 0, 0, 0.1);
            font-size: 14px;
            height: 30px;
            width: 30px;
            position: absolute;
            top: 0;
            left: 0;
            margin-right: 5px;
            padding: 10px;
            display: block;
            vertical-align: middle;
            text-align: center;
        }
        #fileBtn span {
            margin-left: 20px;
        }
        #fileBtn {
            cursor: pointer !important;
            margin-right: 10px;
        }
        .page-header {
            margin-top: 10px !important;
        }
    </style>
</head>
<body ng-controller="FileManagerController">
    @Scripts.Render("~/scripts/wysiwyg")

    <div class="wrapper @Resources.labels.LangDirection">
        <div class="content">
            <form id="form" action="" class="file-form">

                <div id="modal-form" class="modal fade">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true" ng-click="focusInput=false"><i class="fa fa-times"></i></button>
                                <h4 class="modal-title">{{lbl.addFolder}}</h4>
                            </div>
                            <div class="modal-body">
                                <div class="form-group">
                                    <label for="txtFolder">{{lbl.title}}</label>
                                    <input type="text" class="form-control" id="txtFolder" name="txtFolder" data-ng-model="dirName" focus-me="focusInput" />
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" ng-click="createFolder()" class="btn btn-success pull-right btn-tabkey"><i class="fa fa-save"></i>{{lbl.save}}</button>
                                <button type="button" class="btn btn-default" data-dismiss="modal" ng-click="focusInput=false"><i class="fa fa-ban"></i>{{lbl.cancel}}</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="page-header clearfix">
                    <div class="pull-left">
                        <div>
                            <button type="button" tabindex="-1" class="btn btn-sm btn-success" id="fileBtn"><i class="fa fa-plus"></i> <span>{{lbl.theNew}}</span></button>
                            <input type="file" id="file" name="file" data-role="magic-overlay" tabindex="-1" data-target="#fileBtn" title="{{lbl.uploadFile}}" onchange="angular.element(this).scope().uploadFile(this.files)" />
                        </div>
                    </div>
                    <div class="btn-group befdv pull-left">
                        <a ng-click="processChecked('delete')" ng-disabled="itemsChecked() === false" class="btn btn-sm btn-danger" angular-tooltip tooltip="lbl.doDelete"><i class="fa fa-trash"></i></a>
                        <a ng-click="addFolder()" class="btn btn-sm btn-warning" angular-tooltip tooltip="lbl.add"><i class="fa fa-folder"></i></a>
                    </div>

                    <div class="pull-left" style="margin-left: 5px">
                        <input type="text" data-ng-model="query" data-ng-change="search()" class="input-sm form-control search-grid pull-right" placeholder="{{lbl.search}}" />
                    </div>
                    <div class="pull-left" style="margin-left: 20px; line-height: 32px; color: #666">{{currentPath}}</div>
                    <span id="file-spinner" style="padding-left: 10px; position: relative; top: 5px"><i class="fa fa-spinner fa-spin"></i></span>
                </div>

                <div class="row">
                    <div class="file-card" ng-repeat="item in pagedItems[currentPage] | orderBy:sortingOrder:reverse">
                        <div class="file-card-box">
                            <a ng-if="item.FileType === 0 && item.Name != '...'" title="{{item.Name}}" href="" ng-click="load(item.FullPath)" class="pull-left">
                                <img ng-src="{{root}}Content/images/blog/placeholders/folder.png" />
                            </a>
                            <a ng-if="item.FileType === 0 && item.Name === '...'" title="{{item.Name}}" href="" ng-click="load(item.FullPath)" class="pull-left" style="background-color: #e5e5e5">
                                <img ng-src="{{root}}Content/images/blog/placeholders/folder_back.png" />
                            </a>
                            <a ng-if="item.FileType === 1" title="{{item.Name}}" href="" ng-click="insertFile(item)">
                                <img ng-src="{{root}}Content/images/blog/placeholders/{{item.ImgPlaceholder}}" />
                            </a>
                            <a ng-if="item.FileType === 2" title="{{item.Name}}" href="" ng-click="insertFile(item)">
                                <img ng-src="@imgHandler{{item.FullPath}}" />
                            </a>
                        </div>
                        <div class="file-card-lbl">
                            <input ng-if="item.Name != '...'" type="checkbox" data-ng-model="item.IsChecked" /> &nbsp;{{item.Name.substring(0,12)}}
                        </div>
                    </div>
                </div>

                <div ng-if="items.length > itemsPerPage" class="text-right pagination-wrapper" style="margin-top: 10px">
                    <ul class="pagination pagination-sm">
                        <li data-ng-class="{disabled: currentPage == 0}">
                            <a data-ng-click="prevPage()">« {{lbl.prev}}</a>
                        </li>
                        <li data-ng-repeat="n in range(pagedItems.length)" data-ng-class="{active: n == currentPage}" data-ng-click="setPage()">
                            <a data-ng-bind="n + 1">1</a>
                        </li>
                        <li data-ng-class="{disabled: currentPage == pagedItems.length - 1}">
                            <a data-ng-click="nextPage()">{{lbl.next}} »</a>
                        </li>
                    </ul>
                </div>

            </form>
        </div>
    </div>
</body>
</html>
